// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE

import NativeFileDocumentsUtils from "../nativefiledocumentsutils";
import RNBlobUtil from "react-native-blob-util";
import { Platform } from 'react-native';

// END EXTRA CODE

/**
 * Create a directory at dirpath. Automatically creates parents and does not throw if already exists (works like Linux mkdir -p).
 * 
 * For iOS only, the excludeFromBackup property can be set to exclude the directory from all backups of app data. Be aware that allowing backups may violate company policies even if the backup is encrypted. As we download files from the Mendix backend it is usually safe to turn this on.
 * @param {string} dirpath - Path to create
 * @param {"NativeFileDocuments.PathType.FullPath"|"NativeFileDocuments.PathType.DocumentsDirectory"} pathType
 * @param {boolean} excludeFromBackup - Exclude directory from all backups of app data. See JS action docs for more details.
 * @param {boolean} writeToLog
 * @returns {Promise.<boolean>}
 */
export async function mkdir(dirpath, pathType, excludeFromBackup, writeToLog) {
	// BEGIN USER CODE
	if (!dirpath) {
		return Promise.reject(new Error("No file path specified"));
	}
	if (!pathType) {
		return Promise.reject(new Error("No path type specified"));
	}
	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "mkdir",
			logType: "Parameters",
			logMessage: JSON.stringify({
				dirpath: dirpath,
				pathType: pathType
			})
		});
	}

	const fullPath = NativeFileDocumentsUtils.getFullPathNoPrefix(dirpath, pathType, RNBlobUtil, Platform.OS);

	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "mkdir",
			logType: "Info",
			logMessage: "mkdir options: " + JSON.stringify({
				fullPath: fullPath
			})
		});
	}

	RNBlobUtil.fs.mkdir(fullPath);
	return true;

	// END USER CODE
}
