// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE

import NativeFileDocumentsUtils from "../nativefiledocumentsutils";
import RNBlobUtil from "react-native-blob-util";
import { Platform } from 'react-native';

// END EXTRA CODE

/**
 * Checks if the item exists.
 * @param {string} filepath - The path to the file or directory.
 * @param {"NativeFileDocuments.PathType.FullPath"|"NativeFileDocuments.PathType.DocumentsDirectory"} pathType
 * @param {boolean} writeToLog
 * @returns {Promise.<boolean>}
 */
export async function exists(filepath, pathType, writeToLog) {
	// BEGIN USER CODE

	if (!filepath) {
		return Promise.reject(new Error("No file path specified"));
	}
	if (!pathType) {
		return Promise.reject(new Error("No path type specified"));
	}
	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "exists",
			logType: "Parameters",
			logMessage: JSON.stringify({
				filepath: filepath,
				pathType: pathType
			})
		});
	}

	const fullPath = NativeFileDocumentsUtils.getFullPathNoPrefix(filepath, pathType, RNBlobUtil, Platform.OS);

	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "exists",
			logType: "Info",
			logMessage: "Full path: " + fullPath
		});
	}

	return RNBlobUtil.fs.exists(fullPath);

	// END USER CODE
}
