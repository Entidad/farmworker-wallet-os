// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE

import NativeFileDocumentsUtils from "../nativefiledocumentsutils";
import RNBlobUtil from "react-native-blob-util";
import { Platform } from 'react-native';
import { create } from "mx-api/data";


// END EXTRA CODE

/**
 * Reads the contents of dirpath.
 * @param {string} dirpath - Reads the contents of path.
 * @param {"NativeFileDocuments.PathType.FullPath"|"NativeFileDocuments.PathType.DocumentsDirectory"} pathType
 * @param {boolean} writeToLog
 * @returns {Promise.<MxObject[]>}
 */
export async function readDir(dirpath, pathType, writeToLog) {
	// BEGIN USER CODE
	if (!dirpath && pathType !== "DocumentsDirectory") {
		return Promise.reject(new Error("No file path specified"));
	}
	if (!pathType) {
		return Promise.reject(new Error("No path type specified"));
	}
	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "readDir",
			logType: "Parameters",
			logMessage: JSON.stringify({
				dirpath: dirpath,
				pathType: pathType
			})
		});
	}

	const fullPath = NativeFileDocumentsUtils.getFullPathNoPrefix(dirpath, pathType, RNBlobUtil, Platform.OS);

	if (writeToLog) {
		await NativeFileDocumentsUtils.writeToLog({
			actionName: "readDir",
			logType: "Info",
			logMessage: "readDir fullPath: " + fullPath
		});
	}

	const dirItemArray = await RNBlobUtil.fs.lstat(fullPath);

	const resultArray = [];

	for (item of dirItemArray) {
		const newResultItem = await create({ entity: "NativeFileDocuments.ReadDirItem" });
		newResultItem.set("Name", item.filename);
		newResultItem.set("Path", item.path);
		newResultItem.set("Size", item.size);
		newResultItem.set("IsFile", "file" === item.type);
		newResultItem.set("IsDirectory", "directory" === item.type);
		newResultItem.set("LastModified", item.lastModified);
		resultArray.push(newResultItem);
	}

	return resultArray;

	// END USER CODE
}
