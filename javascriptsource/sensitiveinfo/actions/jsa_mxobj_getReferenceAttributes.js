// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE

// END EXTRA CODE

/**
 * https://apidocs.rnd.mendix.com/9/client/mendix_lib_MxObject.html
 * 
 * getReferenceAttributes()
 * 
 * Convenience function
 * 
 * See:
 * 
 *         mendix/lib/MxMetaObject#getReferenceAttributes
 * 
 * Example
 * 
 * var refs = mxobject.getReferenceAttributes(); // [ "Mod.Person_Parent",
 *                                               //   "Mod.Person_Company" ]
 * @param {MxObject} input
 * @returns {Promise.<string>}
 */
export async function jsa_mxobj_getReferenceAttributes(input) {
	// BEGIN USER CODE
	try{
		if(input==null)return Promise.reject("Invalid argument input");
		//todo:handle return type serialization
		let referenceAttributes=input.getReferenceAttributes();//error: Array Module.RefX, Module.RefY cannot be used as Nanoflow variable, because it contains something else then MxObjects.
		/*
		let referenceAttributes=[];
		input.getAttributes().forEach((k)=>{
			if(input.isReference(k)){
				referenceAttributes.push(k)
			}
		});
		*/

		return Promise.resolve(JSON.stringify(referenceAttributes));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
