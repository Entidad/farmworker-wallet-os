// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * https://apidocs.rnd.mendix.com/9/client/mendix_lib_MxObject.html
 * 
 * set(attr, val)
 * 
 * Sets the value of attribute attr to the value of val.
 * 
 * The type of val depends on the type of attribute.
 * 
 * This only changes the mendix/lib/MxObject instance in the client session. To commit the object to the backend database, see mx.data.commit.
 * Parameters:
 * Name  Type  Description
 * attr  string  
 * 
 * attribute to set
 * val  *  
 * 
 * value to set
 * 
 * Throws:
 * 
 * Error if value is invalid, use validator#validate before calling this method
 * Examples
 * 
 * mxobj.set("Name", "John Smith");
 * 
 * mxobj.set("IsActive", true);
 * @param {MxObject} input
 * @param {string} attribute
 * @param {string} value
 * @returns {Promise.<void>}
 */
export async function jsa_mxobj_set(input, attribute, value) {
	// BEGIN USER CODE
	try{
		if(input==null)return Promise.reject("Invalid argument input");
		//todo:handle return type serialization
		return Promise.resolve(input.set(attribute,value));
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
