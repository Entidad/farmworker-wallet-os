// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Compares two Mendix objects and determines if the values of the fields differs in any way
 * If the values differs, false will be returned
 * @param {MxObject} obj1
 * @param {MxObject} obj2
 * @returns {Promise.<boolean>}
 */
export async function jsa_mxobjs_comp(obj1, obj2) {
	// BEGIN USER CODE
	try{
		let equals=true;
		obj1.getAttributes().forEach((attr)=>{
			//skip if already inequal
			if(!equals){console.info("");return}
			//compare attribute types for inequality
			else if(obj1.isBoolean(attr)&&!obj2.isBoolean(attr)){equals=false;return;}
			else if(obj1.isDate(attr)&&!obj2.isDate(attr)){equals=false;return;}
			else if(obj1.isEnum(attr)&&!obj2.isEnum(attr)){equals=false;return;}
			else if(obj1.isLocalizedDate(attr)&&!obj2.isLocalizedDate(attr)){equals=false;return;}
			else if(obj1.isNumeric(attr)&&!obj2.isNumeric(attr)){equals=false;return;}
			else if(obj1.isPassword(attr)&&!obj2.isPassword(attr)){equals=false;return;}
			//skip references
			if(obj1.isObjectReference(attr)||obj1.isObjectReferenceSet(attr)||obj1.isReference(attr)){return;}
			//compare values
			let val1=obj1.get(attr);
			let val2=obj2.get(attr);
			//numbers
			if(val1 instanceof Big&&!val2 instanceof Big){equals=false;return}
			//number type value comparison
			if(val1 instanceof Big){
				equals=Number(obj1.get(attr))==Number(obj2.get(attr));
			}else{
			//other type value comparison
				equals=obj1.get(attr)==obj2.get(attr);
			}
		});
		return Promise.resolve(equals);
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
