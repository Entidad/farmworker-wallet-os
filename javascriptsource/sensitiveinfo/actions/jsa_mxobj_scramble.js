// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Scrambles field values
 * @param {MxObject} obj
 * @param {Big} minstrlen - optional, defaults to 4
 * @param {Big} maxstrlen - optional, defaults to minstrlen
 * @returns {Promise.<void>}
 */
export async function jsa_mxobj_scramble(obj, minstrlen, maxstrlen) {
	// BEGIN USER CODE
	try{
		minstrlen=minstrlen==null?4:minstrlen.toNumber();
		if(minstrlen<0)return Promise.reject("Argument minstrlen has invalid value");
		maxstrlen=maxstrlen==null?minstrlen:maxstrlen.toNumber();
		if(maxstrlen<0)
			return Promise.reject("Argument maxstrlen has invalid value");
		if(minstrlen>maxstrlen)
			return Promise.reject("Invalid minstrlen maxstrlen combination");
		//console.info(JSON.stringify(Object.keys(obj)));
		//["_guid","_unavailable","metaData","jsonData","id"]
		//console.info(JSON.stringify(Object.keys(obj.jsonData)));
		//["guid","objectType","attributes"]
		//console.info(JSON.stringify(Object.keys(obj.jsonData.attributes)));
		//["hashedString_","long_","string_","integer_","dateTime_","decimal_","boolean_","enum_"]
		//console.info(JSON.stringify(Object.keys(obj.jsonData.attributes.string_)));
		//["value","readonly"]
		obj.getAttributes().forEach((attr)=>{
			     if(obj.isReadonlyAttr(attr)){return;}
			else if(obj.isBoolean(attr)){
				obj.set(attr,Math.random()<0.5);
			}
			else if(obj.isDate(attr)){
				obj.set(attr,new Date(+(new Date())-Math.floor(Math.random()*10000000000)));
			}
			else if(obj.isEnum(attr)){
				let enum_values=obj.getEnumMap(attr);
				obj.set(attr,enum_values[Math.floor(Math.random()*enum_values.length)].key);
			}
			else if(obj.isLocalizedDate(attr)){
				obj.set(attr,new Date(+(new Date())-Math.floor(Math.random()*10000000000)));
			}
			else if(obj.isNumeric(attr)){
				obj.set(attr,new Big(Math.floor(Math.random()*10)));
			}
			else if(obj.isObjectReference(attr)){

			}
			else if(obj.isObjectReferenceSet(attr)){

			}
			else if(obj.isPassword(attr)){

			}
			else if(obj.isReference(attr)){

			}
			else{//string
				let glyphs="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+-*/ ";
				let value="";
				let length=minstrlen+Math.floor(Math.random()*(maxstrlen-minstrlen));
				for(let i=0;i<length;i++){
					value=value+glyphs[Math.floor(Math.random()*glyphs.length)];
				}
				obj.set(attr,value)
			}
		});
		return Promise.resolve();
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
