// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * Deserializes JSON string to Mendix object
 * JSON field names matching Mendix object attributes will be set.
 * To generalize this javascript action, the output typeparameter can be populated with the desired Mendix object type
 * @param {string} json
 * @param {MxObject} output
 * @returns {Promise.<void>}
 */
export async function jsa_json2mxobj(json, output) {
	// BEGIN USER CODE
	try{
		json=JSON.parse(json);
		output.getAttributes().forEach((attr)=>{
			if(typeof(json[attr])=="undefined"){
				return;
			}
			else if(output.isReadonlyAttr(attr)){
				return;
			}
			else if(output.isBoolean(attr)){
				output.set(attr,json[attr]);
			}
			else if(output.isDate(attr)){
				output.set(attr,new Date(json[attr]));
			}
			else if(output.isEnum(attr)){
				output.set(attr,json[attr]);
			}
			else if(output.isLocalizedDate(attr)){
				output.set(attr,new Date(json[attr]));
			}
			else if(output.isNumeric(attr)){
				output.set(attr,new Big(json[attr]));
			}
			else if(output.isObjectReference(attr)){
				output.set(attr,json[attr]);
			}
			else if(output.isObjectReferenceSet(attr)){
				output.set(attr,json[attr]);
			}
			else if(output.isPassword(attr)){
				output.set(attr,json[attr]);
			}
			else if(output.isReference(attr)){
			}
			else{//string
				output.set(attr,json[attr]);
			}
		});
		return Promise.resolve();
	}catch(e){
		return Promise.reject(e.toString());
	}
	// END USER CODE
}
