import type { LocationAccuracy, LocationAccuracyOptions, NotificationOption, NotificationsResponse, Permission, PermissionStatus, Rationale } from './types';
<<<<<<< HEAD
export type Contract = {
    check(permission: Permission): Promise<PermissionStatus>;
    checkLocationAccuracy(): Promise<LocationAccuracy>;
    checkNotifications(): Promise<NotificationsResponse>;
    openPhotoPicker(): Promise<void>;
    openSettings(): Promise<void>;
    request(permission: Permission, rationale?: Rationale | (() => Promise<boolean>)): Promise<PermissionStatus>;
=======
export declare type Contract = {
    check(permission: Permission): Promise<PermissionStatus>;
    checkLocationAccuracy(): Promise<LocationAccuracy>;
    checkNotifications(): Promise<NotificationsResponse>;
    openLimitedPhotoLibraryPicker(): Promise<void>;
    openSettings(): Promise<void>;
    request(permission: Permission, rationale?: Rationale): Promise<PermissionStatus>;
>>>>>>> aec85746435d3ba41358c5b7d65f93f87448e5b8
    requestLocationAccuracy(options: LocationAccuracyOptions): Promise<LocationAccuracy>;
    requestNotifications(options: NotificationOption[]): Promise<NotificationsResponse>;
    checkMultiple<P extends Permission[]>(permissions: P): Promise<Record<P[number], PermissionStatus>>;
    requestMultiple<P extends Permission[]>(permissions: P): Promise<Record<P[number], PermissionStatus>>;
};
<<<<<<< HEAD
//# sourceMappingURL=contract.d.ts.map
=======
>>>>>>> aec85746435d3ba41358c5b7d65f93f87448e5b8
